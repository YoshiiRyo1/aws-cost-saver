AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS Cost Saver"

Parameters:
  Amount:
    Type: String
    Default: 100
    Description: Budgeted amount
  EmailAddress:
    Type: String
    Description: Notification email address
  Actual1:
    Type: Number
    Default: 50
    MinValue: 1
    MaxValue: 100
    Description: "% of budgeted amount (Actual Costs)"
  Actual2:
    Type: Number
    Default: 75
    MinValue: 1
    MaxValue: 100
    Description: "% of budgeted amount (Actual Costs)"
  Actual3:
    Type: Number
    Default: 100
    MinValue: 1
    MaxValue: 100
    Description: "% of budgeted amount (Actual Costs)"
  UseBlended:
    Type: String
    Default: no
    AllowedValues: [yes,no]
    Description: Budgeted amount

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: src
      FunctionName: AWSCostSaver-MainFunction
      Handler: main.lambda_handler
      Runtime: python3.8
      MemorySize: 128
      Timeout: 900
      Role: !GetAtt CostSaverRole.Arn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref BudgetsTopic

  LambdaEc2Shutdown:
    Type: AWS::Lambda::Function
    Properties:
      Code: src
      FunctionName: AWSCostSaver-Ec2Shutdown
      Handler: ec2shutdown.lambda_handler
      Runtime: python3.8
      MemorySize: 128
      Timeout: 600
      Role: !GetAtt CostSaverRole.Arn

  LambdaRdsShutdown:
    Type: AWS::Lambda::Function
    Properties:
      Code: src
      FunctionName: AWSCostSaver-RdsShutdown
      Handler: rdsshutdown.lambda_handler
      Runtime: python3.8
      MemorySize: 128
      Timeout: 600
      Role: !GetAtt CostSaverRole.Arn

  CostSaverRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      RoleName: RoleCostSaver

  CostSaverPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ec2:Get*"
              - "ec2:Describe*"
              - ec2:StopInstances
              - "rds:Get*"
              - "rds:Describe*"
              - rds:StopDBCluster
              - rds:StopDBInstance
            Resource: "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource: !Sub "arn:aws:logs:ap-northeast-1:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub "arn:aws:logs:ap-northeast-1:${AWS::AccountId}:log-group:/aws/lambda/AWSCostSaver-*"
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: 
              - !GetAtt LambdaEc2Shutdown.Arn
              - !GetAtt LambdaRdsShutdown.Arn
      PolicyName: PolicyCostSaver
      Roles:
        - !Ref CostSaverRole

  BudgetsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: AWSCostSaver
      TopicName: AWSCostSaver

  BudgetsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      Topics: 
        - !Ref BudgetsTopic
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: 
              Service: budgets.amazonaws.com
            Action: SNS:Publish
            Resource: !Ref BudgetsTopic
            Sid: "allow budgets"
          - Effect: Allow
            Principal: 
              AWS: "*"
            Action: 
              - SNS:GetTopicAttributes
              - SNS:SetTopicAttributes
              - SNS:AddPermission
              - SNS:RemovePermission
              - SNS:DeleteTopic
              - SNS:Subscribe
              - SNS:ListSubscriptionsByTopic
              - SNS:Publish
              - SNS:Receive
            Resource: !Ref BudgetsTopic
            Condition:
              StringEquals:
                AWS:SourceOwner: ${AWS::AccountId}
            Sid: default_statement

  BudgetsSubscription:
    Type: AWS::SNS::Subscription
    Properties: 
      Endpoint: !GetAtt LambdaFunction.Arn
      Protocol: lambda 
      TopicArn: !Ref BudgetsTopic

  Budget:
    Type: AWS::Budgets::Budget
    Properties:
      Budget:
        BudgetName: AWSCostSaver
        BudgetLimit:
          Amount: !Ref Amount
          Unit: USD
        TimeUnit: MONTHLY
        CostTypes:
          UseBlended: !Ref UseBlended
        BudgetType: COST
      NotificationsWithSubscribers:
        - Notification:
            NotificationType: ACTUAL
            ComparisonOperator: GREATER_THAN
            Threshold: !Ref Actual1
          Subscribers:
            - SubscriptionType: EMAIL
              Address: !Ref EmailAddress
            - SubscriptionType: SNS
              Address: !Ref BudgetsTopic
        - Notification:
            NotificationType: ACTUAL
            ComparisonOperator: GREATER_THAN
            Threshold: !Ref Actual2
          Subscribers:
            - SubscriptionType: EMAIL
              Address: !Ref EmailAddress
            - SubscriptionType: SNS
              Address: !Ref BudgetsTopic
        - Notification:
            NotificationType: ACTUAL
            ComparisonOperator: GREATER_THAN
            Threshold: !Ref Actual3
          Subscribers:
            - SubscriptionType: EMAIL
              Address: !Ref EmailAddress
            - SubscriptionType: SNS
              Address: !Ref BudgetsTopic
